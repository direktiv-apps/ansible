swagger: "2.0"
info:
  description: Ansible in Direktiv
  title: ansible
  version: "1.0"
  x-direktiv-meta:
    container: direktiv.azurecr.io/functions/ansible
    maintainer: |-
      [direktiv.io](https://www.direktiv.io) 
    issues: https://github.com/direktiv-apps/ansible/issues
    url: https://github.com/direktiv-apps/ansible  
    categories:
    - unknown
    license: |-
      [Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)
    long-description: >-
      This function runs Ansible in Direktiv. The version installed is X.X.X. The following modules are pre-installed:

      - 

      - 

      - 


      ansible 2.13.3
      gcp, azure, aws
consumes:
- application/json
produces:
- application/json
schemes:
- http
paths:
  /: 
    delete:
      parameters:
        - name: Direktiv-ActionID
          in: header
          type: string
          description: |
            On cancel Direktiv sends a DELETE request to
            the action with id in the header
      x-direktiv:
        cancel: echo 'cancel {{ .DirektivActionID }}'
      responses:
        200:
    post:
      parameters:
        - name: Direktiv-ActionID
          in: header
          type: string
          default: development
          description: |
            direktiv action id is an UUID. 
            For development it can be set to 'development'
        - name: Direktiv-TempDir
          in: header
          type: string
          default: /tmp
          description: |
            direktiv temp dir is the working directory for that request
            For development it can be set to e.g. '/tmp'
        - name: body
          in: body
          schema:
            type: object
            properties:
              files:
                type: array
                items:
                  $ref: '#/definitions/direktivFile'
                description: File to create before running commands.
                default: []
              commands:
                type: array
                description: Array of commands.
                items:
                  type: object
                  properties:
                    command:
                      type: string
                      description: Command to run
                    silent: 
                      type: boolean
                      description: If set to false the command will not print output to logs.
                      default: false
                    print: 
                      type: boolean
                      description: If set to false the command will not print the full command with arguments to logs.
                      default: true
                    continue: 
                      type: boolean
                      description: Stops excecution if command fails, otherwise proceeds with next command 
                default: 
                - command: echo Hello
      # direktiv code generation is configured here
      x-direktiv-function: |-
        functions:
        - id: ansible
          image: direktiv.azurecr.io/functions/ansible:1.0
          type: knative-workflow
      x-direktiv-examples:
        # ADD MORE EXAMPLES HERE
        - title: Simple Playbook
          content: |-
            - id: ansible
              type: action
              action:
                function: ansible
                input: 
                  files: 
                  - name: playbook.yaml
                    data: |
                      ---
                      - name: "Ansible Playbook"
                        hosts: localhost
                        connection: local 
                        tasks:

                        - name: "ls on localhost"
                          shell: "ls -l"
                          register: "output"
                  commands:
                  - command: ansible-playbook playbook.yaml
        - title: Advanced
          content: |-
            - id: ansible
              type: action
              action:
                function: ansible
                input: 
                  files:
                  - name: hello.txt
                    data: Hello World
                    mode: '0755'
                  commands:
                  - command: Example of running ansible
      x-direktiv:  
        cmds:
        - action: exec
          exec: /config.sh
          print: false
          silent: true
        - action: foreach
          loop: .Commands
          exec: '{{ .Item.Command }}'
          silent: '{{ .Item.Silent }}'
          print: '{{ .Item.Print }}'
          continue: '{{ .Item.Continue }}'
        output: |
          {
            "ansible": {{ index . 1 | toJson }}
          }
      x-direktiv-errors:
        io.direktiv.command.error: Command execution failed
        io.direktiv.output.error: Template error for output generation of the service
        io.direktiv.ri.error: Can not create information object from request
      responses:
        200:
          description: List of executed commands.
          examples:
            ansible:
            - result: # EXAMPLE RESULT HERE
              success: true
            - result: #  EXAMPLE RESULT HERE
              success: true
          schema:
            type: object
            properties:
              ansible:
                type: array
                items:
                  type: object
                  required:
                  - success
                  - result
                  properties:
                    success:
                      type: boolean
                    result:
                      additionalProperties: {}
        default:
          description: generic error response
          headers:,
		{
			"name": "playbook.yaml",
			"data": "---\n- name: "Playing with Ansible and Git"\nhosts: localhost\nconnection: local\ntasks:\n- name: "just execute a ls -lrt command"
      shell: "ls -lrt"
      register: "output""

		}
            $ref: "#/definitions/error"
definitions:
  direktivFile:
    type: object
    x-go-type:
      type: DirektivFile
      import:
        package: github.com/direktiv/apps/go/pkg/apps 
  error:
    type: object
    required:
      - errorCode
      - errorMessage
    properties:
      errorCode:
        type: string
      errorMessage:
        type: string
