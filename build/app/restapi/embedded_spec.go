// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Run ansible in Direktiv",
    "title": "ansible",
    "version": "1.0",
    "x-direktiv-meta": {
      "categories": [
        "unknown"
      ],
      "container": "direktiv.azurecr.io/functions/ansible",
      "issues": "https://github.com/direktiv-apps/ansible/issues",
      "license": "[Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)",
      "long-description": "This function provides Ansible in Direktiv. Ansible version 2.13.3 is installed with the following modules:\n- amazon.aws\n- google.cloud\n- azure.azcollection\n\nThe default configuration in ` + "`" + `ansible.cfg` + "`" + ` can be overwritten with either DirektivFiles or Direktiv variables.\n\n*Default ansible.cfg*\n` + "`" + `` + "`" + `` + "`" + ` [defaults]\ninventory = hosts\nhost_key_checking = False\n` + "`" + `` + "`" + `` + "`" + ` ",
      "maintainer": "[direktiv.io](https://www.direktiv.io) ",
      "url": "https://github.com/direktiv-apps/ansible"
    }
  },
  "paths": {
    "/": {
      "post": {
        "parameters": [
          {
            "type": "string",
            "default": "development",
            "description": "direktiv action id is an UUID. \nFor development it can be set to 'development'\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          },
          {
            "type": "string",
            "default": "/tmp",
            "description": "direktiv temp dir is the working directory for that request\nFor development it can be set to e.g. '/tmp'\n",
            "name": "Direktiv-TempDir",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "commands": {
                  "description": "Array of commands.",
                  "type": "array",
                  "default": [
                    {
                      "command": "echo Hello"
                    }
                  ],
                  "items": {
                    "type": "object",
                    "properties": {
                      "command": {
                        "description": "Command to run",
                        "type": "string"
                      },
                      "continue": {
                        "description": "Stops excecution if command fails, otherwise proceeds with next command",
                        "type": "boolean"
                      },
                      "print": {
                        "description": "If set to false the command will not print the full command with arguments to logs.",
                        "type": "boolean",
                        "default": true
                      },
                      "silent": {
                        "description": "If set to false the command will not print output to logs.",
                        "type": "boolean",
                        "default": false
                      }
                    }
                  }
                },
                "files": {
                  "description": "File to create before running commands.",
                  "type": "array",
                  "default": null,
                  "items": {
                    "$ref": "#/definitions/direktivFile"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of executed commands.",
            "schema": {
              "type": "object",
              "properties": {
                "ansible": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "success",
                      "result"
                    ],
                    "properties": {
                      "result": {
                        "additionalProperties": false
                      },
                      "success": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "ansible": [
                {
                  "result": {
                    "custom_stats": {},
                    "global_custom_stats": {},
                    "plays": [
                      {
                        "play": {
                          "duration": {
                            "end": "2022-08-31T11:55:44.265820Z",
                            "start": "2022-08-31T11:55:40.276975Z"
                          },
                          "id": "1ab65ae3-cbb9-49dc-b739-000000000005",
                          "name": "Ansible Playbook"
                        },
                        "tasks": null
                      }
                    ]
                  },
                  "success": true
                },
                {
                  "result": "[defaults]\ninventory = hosts\nhost_key_checking = False",
                  "success": true
                }
              ]
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            },
            "headers": {
              "Direktiv-ErrorCode": {
                "type": "string"
              },
              "Direktiv-ErrorMessage": {
                "type": "string"
              }
            }
          }
        },
        "x-direktiv": {
          "cmds": [
            {
              "action": "exec",
              "exec": "/config.sh",
              "print": false,
              "silent": true
            },
            {
              "action": "foreach",
              "continue": "{{ .Item.Continue }}",
              "exec": "{{ .Item.Command }}",
              "loop": ".Commands",
              "print": "{{ .Item.Print }}",
              "silent": "{{ .Item.Silent }}"
            }
          ],
          "output": "{\n  \"ansible\": {{ index . 1 | toJson }}\n}\n"
        },
        "x-direktiv-errors": {
          "io.direktiv.command.error": "Command execution failed",
          "io.direktiv.output.error": "Template error for output generation of the service",
          "io.direktiv.ri.error": "Can not create information object from request"
        },
        "x-direktiv-examples": [
          {
            "content": "- id: ansible\n  type: action\n  action:\n    function: ansible\n    input: \n      files: \n      - name: playbook.yaml\n        data: |\n          ---\n          - name: \"Ansible Playbook\"\n            hosts: localhost\n            connection: local \n            tasks:\n            - name: \"ls on localhost\"\n              shell: \"ls -l\"\n              register: \"output\"\n      commands:\n      - command: ansible-playbook playbook.yaml",
            "title": "Playbook with DirektivFiles"
          },
          {
            "content": "- id: ansible\n  type: action\n  action:\n    function: ansible\n    files: \n    - key: playbook.yaml\n      scope: workflow\n    input:\n      commands:\n      - command: ansible-playbook playbook.yaml",
            "title": "Playbook with variables"
          },
          {
            "content": "- id: ansible\n  type: action\n  action:\n    function: ansible\n    files: \n    - key: ansible.cfg\n      scope: workflow\n    input:\n      commands:\n      - command: ansible-config view",
            "title": "Custom ansible.cfg"
          }
        ],
        "x-direktiv-function": "functions:\n- id: ansible\n  image: direktiv.azurecr.io/functions/ansible:1.0\n  type: knative-workflow"
      },
      "delete": {
        "parameters": [
          {
            "type": "string",
            "description": "On cancel Direktiv sends a DELETE request to\nthe action with id in the header\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-direktiv": {
          "cancel": "echo 'cancel {{ .DirektivActionID }}'"
        }
      }
    }
  },
  "definitions": {
    "direktivFile": {
      "type": "object",
      "x-go-type": {
        "import": {
          "package": "github.com/direktiv/apps/go/pkg/apps"
        },
        "type": "DirektivFile"
      }
    },
    "error": {
      "type": "object",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Run ansible in Direktiv",
    "title": "ansible",
    "version": "1.0",
    "x-direktiv-meta": {
      "categories": [
        "unknown"
      ],
      "container": "direktiv.azurecr.io/functions/ansible",
      "issues": "https://github.com/direktiv-apps/ansible/issues",
      "license": "[Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)",
      "long-description": "This function provides Ansible in Direktiv. Ansible version 2.13.3 is installed with the following modules:\n- amazon.aws\n- google.cloud\n- azure.azcollection\n\nThe default configuration in ` + "`" + `ansible.cfg` + "`" + ` can be overwritten with either DirektivFiles or Direktiv variables.\n\n*Default ansible.cfg*\n` + "`" + `` + "`" + `` + "`" + ` [defaults]\ninventory = hosts\nhost_key_checking = False\n` + "`" + `` + "`" + `` + "`" + ` ",
      "maintainer": "[direktiv.io](https://www.direktiv.io) ",
      "url": "https://github.com/direktiv-apps/ansible"
    }
  },
  "paths": {
    "/": {
      "post": {
        "parameters": [
          {
            "type": "string",
            "default": "development",
            "description": "direktiv action id is an UUID. \nFor development it can be set to 'development'\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          },
          {
            "type": "string",
            "default": "/tmp",
            "description": "direktiv temp dir is the working directory for that request\nFor development it can be set to e.g. '/tmp'\n",
            "name": "Direktiv-TempDir",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/postParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of executed commands.",
            "schema": {
              "$ref": "#/definitions/postOKBody"
            },
            "examples": {
              "ansible": [
                {
                  "result": {
                    "custom_stats": {},
                    "global_custom_stats": {},
                    "plays": [
                      {
                        "play": {
                          "duration": {
                            "end": "2022-08-31T11:55:44.265820Z",
                            "start": "2022-08-31T11:55:40.276975Z"
                          },
                          "id": "1ab65ae3-cbb9-49dc-b739-000000000005",
                          "name": "Ansible Playbook"
                        },
                        "tasks": []
                      }
                    ]
                  },
                  "success": true
                },
                {
                  "result": "[defaults]\ninventory = hosts\nhost_key_checking = False",
                  "success": true
                }
              ]
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            },
            "headers": {
              "Direktiv-ErrorCode": {
                "type": "string"
              },
              "Direktiv-ErrorMessage": {
                "type": "string"
              }
            }
          }
        },
        "x-direktiv": {
          "cmds": [
            {
              "action": "exec",
              "exec": "/config.sh",
              "print": false,
              "silent": true
            },
            {
              "action": "foreach",
              "continue": "{{ .Item.Continue }}",
              "exec": "{{ .Item.Command }}",
              "loop": ".Commands",
              "print": "{{ .Item.Print }}",
              "silent": "{{ .Item.Silent }}"
            }
          ],
          "output": "{\n  \"ansible\": {{ index . 1 | toJson }}\n}\n"
        },
        "x-direktiv-errors": {
          "io.direktiv.command.error": "Command execution failed",
          "io.direktiv.output.error": "Template error for output generation of the service",
          "io.direktiv.ri.error": "Can not create information object from request"
        },
        "x-direktiv-examples": [
          {
            "content": "- id: ansible\n  type: action\n  action:\n    function: ansible\n    input: \n      files: \n      - name: playbook.yaml\n        data: |\n          ---\n          - name: \"Ansible Playbook\"\n            hosts: localhost\n            connection: local \n            tasks:\n            - name: \"ls on localhost\"\n              shell: \"ls -l\"\n              register: \"output\"\n      commands:\n      - command: ansible-playbook playbook.yaml",
            "title": "Playbook with DirektivFiles"
          },
          {
            "content": "- id: ansible\n  type: action\n  action:\n    function: ansible\n    files: \n    - key: playbook.yaml\n      scope: workflow\n    input:\n      commands:\n      - command: ansible-playbook playbook.yaml",
            "title": "Playbook with variables"
          },
          {
            "content": "- id: ansible\n  type: action\n  action:\n    function: ansible\n    files: \n    - key: ansible.cfg\n      scope: workflow\n    input:\n      commands:\n      - command: ansible-config view",
            "title": "Custom ansible.cfg"
          }
        ],
        "x-direktiv-function": "functions:\n- id: ansible\n  image: direktiv.azurecr.io/functions/ansible:1.0\n  type: knative-workflow"
      },
      "delete": {
        "parameters": [
          {
            "type": "string",
            "description": "On cancel Direktiv sends a DELETE request to\nthe action with id in the header\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-direktiv": {
          "cancel": "echo 'cancel {{ .DirektivActionID }}'"
        }
      }
    }
  },
  "definitions": {
    "direktivFile": {
      "type": "object",
      "x-go-type": {
        "import": {
          "package": "github.com/direktiv/apps/go/pkg/apps"
        },
        "type": "DirektivFile"
      }
    },
    "error": {
      "type": "object",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "postOKBody": {
      "type": "object",
      "properties": {
        "ansible": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/postOKBodyAnsibleItems"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "postOKBodyAnsibleItems": {
      "type": "object",
      "required": [
        "success",
        "result"
      ],
      "properties": {
        "result": {
          "additionalProperties": false
        },
        "success": {
          "type": "boolean"
        }
      },
      "x-go-gen-location": "operations"
    },
    "postParamsBody": {
      "type": "object",
      "properties": {
        "commands": {
          "description": "Array of commands.",
          "type": "array",
          "default": [
            {
              "command": "echo Hello"
            }
          ],
          "items": {
            "$ref": "#/definitions/postParamsBodyCommandsItems"
          }
        },
        "files": {
          "description": "File to create before running commands.",
          "type": "array",
          "default": [],
          "items": {
            "$ref": "#/definitions/direktivFile"
          }
        }
      },
      "x-go-gen-location": "operations"
    },
    "postParamsBodyCommandsItems": {
      "type": "object",
      "properties": {
        "command": {
          "description": "Command to run",
          "type": "string"
        },
        "continue": {
          "description": "Stops excecution if command fails, otherwise proceeds with next command",
          "type": "boolean"
        },
        "print": {
          "description": "If set to false the command will not print the full command with arguments to logs.",
          "type": "boolean",
          "default": true
        },
        "silent": {
          "description": "If set to false the command will not print output to logs.",
          "type": "boolean",
          "default": false
        }
      },
      "x-go-gen-location": "operations"
    }
  }
}`))
}
