openapi: 3.0.1
info:
  title: ansible
  description: Run ansible in Direktiv
  version: "1.1"
  x-direktiv-meta:
    container: gcr.io/direktiv/functions/ansible
    maintainer: "[direktiv.io](https://www.direktiv.io) "
    issues: https://github.com/direktiv-apps/ansible/issues
    url: https://github.com/direktiv-apps/ansible
    categories:
    - build
    - infrastructure
    license: "[Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)"
    long-description: "This function provides Ansible in Direktiv. Ansible version\
      \ 2.14.1 is installed with the following modules:\n- amazon.aws\n- google.cloud\n\
      - azure.azcollection\n\nThe default configuration in `ansible.cfg` can be overwritten\
      \ with either DirektivFiles or Direktiv variables.\n\n*Default ansible.cfg*\n\
      ``` [defaults]\ninventory = hosts\nhost_key_checking = False\n``` "
servers:
- url: /
paths:
  /:
    post:
      parameters:
      - name: Direktiv-ActionID
        in: header
        description: "direktiv action id is an UUID. \nFor development it can be set\
          \ to 'development'\n"
        schema:
          type: string
          default: development
      - name: Direktiv-TempDir
        in: header
        description: |
          direktiv temp dir is the working directory for that request
          For development it can be set to e.g. '/tmp'
        schema:
          type: string
          default: /tmp
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                files:
                  type: array
                  description: File to create before running commands.
                  items:
                    $ref: '#/components/schemas/direktivFile'
                commands:
                  type: array
                  description: Array of commands.
                  items:
                    type: object
                    properties:
                      command:
                        type: string
                        description: Command to run
                      silent:
                        type: boolean
                        description: If set to false the command will not print output
                          to logs.
                        default: false
                      print:
                        type: boolean
                        description: If set to false the command will not print the
                          full command with arguments to logs.
                        default: true
                      continue:
                        type: boolean
                        description: "Stops excecution if command fails, otherwise\
                          \ proceeds with next command"
        required: false
      responses:
        "200":
          description: List of executed commands.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ansible:
                    type: array
                    items:
                      required:
                      - result
                      - success
                      type: object
                      properties:
                        success:
                          type: boolean
                        result:
                          type: object
            ansible:
              example:
              - result:
                  custom_stats: {}
                  global_custom_stats: {}
                  plays:
                  - play:
                      duration:
                        end: 2022-08-31T11:55:44.265820Z
                        start: 2022-08-31T11:55:40.276975Z
                      id: 1ab65ae3-cbb9-49dc-b739-000000000005
                      name: Ansible Playbook
                    tasks: []
                success: true
              - result: |-
                  [defaults]
                  inventory = hosts
                  host_key_checking = False
                success: true
        default:
          description: generic error response
          headers:
            Direktiv-ErrorMessage:
              schema:
                type: string
            Direktiv-ErrorCode:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      x-direktiv-function: |-
        functions:
        - id: ansible
          image: gcr.io/direktiv/functions/ansible:1.1
          type: knative-workflow
      x-direktiv-examples:
      - title: Playbook with DirektivFiles
        content: "- id: ansible\n  type: action\n  action:\n    function: ansible\n\
          \    input: \n      files: \n      - name: playbook.yaml\n        data:\
          \ |\n          ---\n          - name: \"Ansible Playbook\"\n           \
          \ hosts: localhost\n            connection: local \n            tasks:\n\
          \            - name: \"ls on localhost\"\n              shell: \"ls -l\"\
          \n              register: \"output\"\n      commands:\n      - command:\
          \ ansible-playbook playbook.yaml"
      - title: Playbook with variables
        content: "- id: ansible\n  type: action\n  action:\n    function: ansible\n\
          \    files: \n    - key: playbook.yaml\n      scope: workflow\n    input:\n\
          \      commands:\n      - command: ansible-playbook playbook.yaml"
      - title: Custom ansible.cfg
        content: "- id: ansible\n  type: action\n  action:\n    function: ansible\n\
          \    files: \n    - key: ansible.cfg\n      scope: workflow\n    input:\n\
          \      commands:\n      - command: ansible-config view"
      x-direktiv:
        cmds:
        - action: exec
          exec: /config.sh
          print: false
          silent: true
        - action: foreach
          loop: .Commands
          exec: "{{ .Item.Command }}"
          silent: "{{ .Item.Silent }}"
          print: "{{ .Item.Print }}"
          continue: "{{ .Item.Continue }}"
        output: |
          {
            "ansible": {{ index . 1 | toJson }}
          }
      x-direktiv-errors:
        io.direktiv.command.error: Command execution failed
        io.direktiv.output.error: Template error for output generation of the service
        io.direktiv.ri.error: Can not create information object from request
      x-codegen-request-body-name: body
components:
  schemas:
    direktivFile:
      type: object
      x-go-type:
        type: DirektivFile
        import:
          package: github.com/direktiv/apps/go/pkg/apps
    error:
      required:
      - errorCode
      - errorMessage
      type: object
      properties:
        errorCode:
          type: string
        errorMessage:
          type: string
